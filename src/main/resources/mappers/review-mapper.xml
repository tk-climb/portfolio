<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
  
<mapper namespace="review">
	
	<!-- 리뷰 목록 -->
	<select id="reviewList" parameterType="map" resultType="review">
		SELECT * 
		  FROM (
		  SELECT ROWNUM RNUM, A.*
		  FROM (
		  		SELECT *
  				FROM REVIEW R
  				JOIN MEMBER USING(MEMBER_NO)
 				WHERE R.RES_NO = #{resNo}
			   	AND REVIEW_RATE ${num}
 				ORDER BY UPLOAD_DATE DESC )A)
		 WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<!-- 리뷰 정렬 카운트 -->
	<select id="countRate0" parameterType="int" resultType="int">
		SELECT COUNT(*)
		  FROM REVIEW
		 WHERE RES_NO = #{resNo}
	</select>
	
	<select id="countRate1" parameterType="int" resultType="int">
		SELECT COUNT(*)
		  FROM REVIEW
		 WHERE RES_NO = #{resNo}
		   AND REVIEW_RATE = 1
	</select>
	
	<select id="countRate2" parameterType="int" resultType="int">
		SELECT COUNT(*)
		  FROM REVIEW
		 WHERE RES_NO = #{resNo}
		   AND REVIEW_RATE = 2
	</select>
	
	<select id="countRate3" parameterType="int" resultType="int">
		SELECT COUNT(*)
		  FROM REVIEW
		 WHERE RES_NO = #{resNo}
		   AND REVIEW_RATE = 3
	</select>
	
	<!-- 리뷰 개수 -->
	<select id="reviewListCount" parameterType="map" resultType="int">
      SELECT COUNT(*)
        FROM REVIEW 
        JOIN RESTAURANT USING(RES_NO)
       WHERE REVIEW_RATE ${num}
         AND RES_NO = #{resNo}
   </select>
	
	<!-- 리뷰 작성 -->
	<insert id="writeReview" parameterType="review">
		INSERT INTO REVIEW(
							REVIEW_NO,
							RES_NO,
							MEMBER_NO,
							REVIEW_CONTENT,
							UPLOAD_DATE,
							REVIEW_RATE,
							WARN_STATUS)
		VALUES(
		   		SEQ_REV.NEXTVAL,
		   		#{resNo},
		   		#{memberNo},
		   		#{reviewContent},
		   		DEFAULT,
		   		#{reviewRate},
		   		DEFAULT)
	</insert>
	
	<!-- 작성된 리뷰 번호 조회 -->
	<select id="selectReviewNo" parameterType="review" resultType="int">
		SELECT REVIEW_NO
		  FROM REVIEW
		 WHERE RES_NO = #{resNo}
		   AND MEMBER_NO = #{memberNo}
		   AND UPLOAD_DATE = SYSDATE
	</select>
	
	<!-- 리뷰 수정 -->
	<update id="modifyReview" parameterType="review">
		UPDATE REVIEW 
		   SET REVIEW_RATE = #{reviewRate},
		   	   REVIEW_CONTENT = #{reviewContent}
		 WHERE REVIEW_NO = #{reviewNo}
 	</update>
	
	<!-- 리뷰 삭제 -->
	<delete id="deleteReview" parameterType="review">
		DELETE FROM REVIEW
		 WHERE REVIEW_NO = #{reviewNo}
	</delete>

	<!-- 리뷰 신고 -->
	<update id="warnReview" parameterType="review">
		UPDATE REVIEW 
		   SET WARN_STATUS = 'Y',
		   	   WARN_CONTENT = #{warnContent}
		 WHERE REVIEW_NO = #{reviewNo}
	</update>
	
	
	<!-- 리뷰 목록 조회 -->
	<select id="aselectReviewList" resultType="review">
		SELECT * FROM (
		SELECT ROWNUM RNUM, A.*
		FROM (SELECT *
		FROM RESTAURANT JOIN
		REVIEW USING (RES_NO)
		WHERE WARN_STATUS = 'Y'
		AND RES_NAME
		LIKE '%' || #{keyword} || '%')A)
		WHERE RNUM BETWEEN #{startRow} AND
		#{endRow}
	</select>

	<!-- 리뷰 리스트 수 -->
	<select id="aselectReviewListCount" parameterType="string" resultType="int">
		SELECT COUNT(*)
		FROM RESTAURANT JOIN REVIEW USING (RES_NO)
		WHERE WARN_STATUS = 'Y'
		AND RES_NAME LIKE '%' || #{keyword} || '%'

	</select>

	<delete id="adeleteReview" parameterType="int">
		DELETE FROM REVIEW WHERE
		REVIEW_NO = #{reviewNo}
	</delete>

	<update id="aupdateReview" parameterType="int">
		UPDATE REVIEW SET
		WARN_STATUS = 'N' WHERE REVIEW_NO = #{reviewNo}
	</update>
	
	<!-- 마이 리뷰 목록 조회 -->
	<select id="myReviewList" parameterType="map" resultType="review">
		
		SELECT * FROM (
		SELECT ROWNUM RNUM, A.*
		FROM ( SELECT *
		FROM REVIEW 
		JOIN RESTAURANT USING(RES_NO)
		WHERE MEMBER_NO = #{ memberNo } )A)
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}

	</select>
	
	<!-- 리뷰 카운트 수 -->
	<select id="reviewCount" parameterType="int" resultType="int">
		SELECT COUNT(*)
		FROM REVIEW
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 마이 리뷰 삭제 -->
	<delete id="myDeleteReview" parameterType="int">
		DELETE FROM REVIEW
		 WHERE REVIEW_NO = #{reviewNo}
	</delete>
	
</mapper>